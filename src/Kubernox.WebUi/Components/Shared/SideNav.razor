@inject IJSRuntime JsRuntime

<Sider Width="200" Style="overflow: auto;height: 100vh;position: fixed;left: 0;">
    <Menu Mode="MenuMode.Inline"
          Theme="MenuTheme.Light"
          Style="min-height: 100%;">

        <FeatureComponent FlagName="Instance">
            <MenuItem>
                <MenuLink Href="/instances" Match="@NavLinkMatch.Prefix">
                    <Icon Type="pie-chart" Theme="outline" />
                    <span>Instances</span>
                </MenuLink>
            </MenuItem>
        </FeatureComponent>

        <MenuItem>
            <MenuLink Href="/k3s" Match="@NavLinkMatch.Prefix">
                <Icon Type="pie-chart" Theme="outline" />
                <span>K3S</span>
            </MenuLink>
        </MenuItem>

        <FeatureComponent FlagName="Template">
            <MenuItem>
                <MenuLink Href="/templates" Match="@NavLinkMatch.Prefix">
                    <Icon Type="pie-chart" Theme="outline" />
                    <span>Templates</span>
                </MenuLink>
            </MenuItem>
        </FeatureComponent>

        <SubMenu Key="admin" TitleTemplate=subMenuAdmin>
            <MenuItem>
                <MenuLink Href="/hosts" Match="@NavLinkMatch.Prefix">Hosts</MenuLink>
            </MenuItem>
            <MenuItem>
                <MenuLink Href="/projects" Match="@NavLinkMatch.Prefix">Projects</MenuLink>
            </MenuItem>
            <MenuItem>
                <MenuLink Href="/ssh-keys" Match="@NavLinkMatch.Prefix">SSH</MenuLink>
            </MenuItem>

            <MenuItem OnClick=@(async () => await OpenHangfireDashboard("/hangfire/"))>
                Hangfire
            </MenuItem>
        </SubMenu>

    </Menu>
</Sider>


@code {
    RenderFragment subMenuAdmin =@<span>
        <Icon Type="user" Theme="outline" />
        <span>Admin</span>
    </span>
    ;

    private async Task OpenHangfireDashboard(string url)
    {
        await JsRuntime.InvokeVoidAsync("open", url, "_blank");
    }
}