@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@page "/hosts"
@using Kubernox.WebUi.Components.Modals
@attribute [Authorize]

<PageTitle>Kubernox - Admin - Hosts</PageTitle>

<Card>
    <PageHeader Class="site-page-header">
        <PageHeaderTitle>
            Hosts
        </PageHeaderTitle>
        <PageHeaderExtra>
            <Button Type="@ButtonType.Primary" Icon="@IconType.Outline.Plus" OnClick="OpenCreateHostConfigurationAsync" />
        </PageHeaderExtra>
    </PageHeader>

    <Table DataSource="@HostState?.Value?.Hosts" Bordered HidePagination Loading="@(HostState?.Value?.IsLoading ?? true)">
        <PropertyColumn Property="c => c.Name">
            <a>@context.Name</a>
        </PropertyColumn>

        <PropertyColumn Property="c => c.Ip" />

        <PropertyColumn Property="c => c.Status">
            @if (context.Status == "Online")
            {
                <Tag Color="@PresetColor.Green.ToString()">Online</Tag>
            }
            else
            {
                <Tag Color="@PresetColor.Red.ToString()">Offline</Tag>
            }
        </PropertyColumn>

        <PropertyColumn Property="c => c.IsActive">
            @if (context.IsActive)
            {
                <Tag Color="@PresetColor.Green.ToString()">Active</Tag>
            }
            else
            {
                <Tag Color="@PresetColor.Red.ToString()">Inactive</Tag>
            }
        </PropertyColumn>

        <PropertyColumn Property="c => c.Nodes">
            @if (context.Nodes != null && context.Nodes.Any())
            {
                <AntList Bordered DataSource="@context.Nodes">
                    <ChildContent Context="item">
                        <ListItem>
                            @item.Name
                        </ListItem>
                    </ChildContent>
                </AntList>
            }
        </PropertyColumn>

        <ActionColumn Width="100px">
            <Space Size=@("large")>
                <SpaceItem>
                    <Button Shape="@ButtonShape.Circle" Icon="@IconType.Outline.Edit" />
                </SpaceItem>

                <SpaceItem>
                    <Button Shape="@ButtonShape.Circle" Icon="@IconType.Outline.Delete" Danger />
                </SpaceItem>
            </Space>
        </ActionColumn>
    </Table>
</Card>

<CreateHostConfigurationModal @ref=@createHostConfigurationModal />